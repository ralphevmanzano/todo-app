apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.todo_app"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                ]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }
}

dependencies {
    def nav_version = "2.1.0"
    def lifecycle_version = "2.2.0-rc01"
    def arch_core_version = "2.1.0"
    def room_version = "2.2.0"
    def dagger_version = "2.23.2"
    def coroutines_version = "1.2.1"
    def espresso_version = "3.2.0"
    def robolectric_version = "4.3-beta-1"
    def androidx_test_ext_kotlin_runner_version = "1.1.1"
    def androidx_text_core_version = "1.2.0"
    def androidx_test_rules_version = "1.2.0-beta01"
    def junit_version = "4.12"
    def mockito_version = "2.8.9"
    def hamcrest_version = "1.3"
    def truth_version = "1.0"
    def dex_maker_version = "2.12.1"
    def fragment_version = "1.2.0-beta02"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    // Android X - Instrumented testing
    androidTestImplementation "androidx.test:core-ktx:$androidx_text_core_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidx_test_ext_kotlin_runner_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_rules_version"
    androidTestImplementation "org.robolectric:annotations:$robolectric_version"
    implementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espresso_version"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_core_version"

    // For local unit tests
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrest_version"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dex_maker_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    testImplementation "com.google.truth:truth:$truth_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$androidx_text_core_version"
    testImplementation "androidx.test.ext:junit-ktx:$androidx_test_ext_kotlin_runner_version"
    testImplementation "androidx.test:rules:$androidx_test_rules_version"
    // Once https://issuetracker.google.com/127986458 is fixed this can be testImplementation
    implementation "androidx.fragment:fragment-testing:$fragment_version"
    implementation "androidx.test:core:$androidx_text_core_version"
    implementation "androidx.fragment:fragment:$fragment_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Viewmodel and Livedata
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    testImplementation "androidx.arch.core:core-testing:$arch_core_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // Dagger 2
    implementation "com.google.dagger:dagger-android:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    // Using Dagger in androidTest and Robolectric too
    kaptAndroidTest "com.google.dagger:dagger-compiler:$dagger_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger_version"

}
